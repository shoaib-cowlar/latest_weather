version: "3.8"
services:

  server:
    networks:
      - weather-app
    build:
      context: ./server
      dockerfile: Dockerfile
    image: weather-server-image
    ports:
      - 5000:5000
    container_name: weather_server-container
    volumes:
      - ./server:/app
    env_file:
      - ./env/.env
    environment:
      DEV_DB_HOST: dbPostgres
      TEST_DB_HOST: dbPostgres
    depends_on:
      - mqtt5
      - influxdb
      - dbPostgres

  client:
    networks:
      - weather-app
    build:
      context: ./client
      dockerfile: Dockerfile
    image: weather-client-image
    ports:
      - 3001:80
    container_name: weather-client-container
    volumes:
      - ./client:/app
    links:
      - server
    depends_on:
      - server
    environment:
      VUE_APP_BASE_URL: server
    env_file:
      - ./env/client.env

  adminer:
    networks:
      - weather-app
    image: adminer:latest
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - dbPostgres

  mqtt5:
    networks:
      - weather-app
    image: eclipse-mosquitto
    container_name: mqtt5
    ports:
      - "1883:1883" #default mqtt port
      - "9001:9001" #default mqtt port for websockets
    volumes:
      - ./volumes/mqtt/config:/mosquitto/config:rw
      - mqtt_data-volume:/mosquitto/data:rw
      - mqtt_log-volume:/mosquitto/log:rw

  dbPostgres:
    networks:
      - weather-app
    image: postgres:10
    container_name: dbPostgres
    restart: always
    ports:
      - 5432:5432
    env_file:
      - ./env/.env
    environment:
      - POSTGRES_USER=${DEV_DB_USER}
      - POSTGRES_PASSWORD=${DEV_DB_PASS}
      - POSTGRES_DB=${DEV_DB_DB}
      - POSTGRES_DB_TEST=${TEST_DB_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_init:/docker-entrypoint-initdb.d

  influxdb:
    networks:
      - weather-app
    image: influxdb:latest
    container_name: influxdb
    restart: always
    ports:
      - "8086:8086"
    volumes:
      - influx_data:/var/lib/influxdb2
      - influx_config:/etc/influxdb2
    env_file:
      - ./env/.env
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUX_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUX_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUX_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUX_BUCKET}
      - DOCKER_INFLUXDB_INIT_RETENTION=${INFLUX_RETENTION}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_TOKEN}

# volumes for mapping data, config, and log
volumes:
  mqtt_data-volume:
  mqtt_log-volume:
  postgres_data:
  postgres_init:
  influx_data:
  influx_config:

networks:
  weather-app:

